cmake_minimum_required(VERSION 3.8)

project(TGON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)
set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 0)

option(TGON_GRAPHICS_OPENGL "Use OpenGL Graphics API." ON)
if (WIN32)
	set(TGON_PLATFORM "TGON_PLATFORM_WINDOWS")
	option(TGON_GRAPHICS_DIRECT3D11 "Use Direct3D11 Graphics API." OFF)
	add_definitions(-DUNICODE -D_UNICODE)
	list (APPEND TGON_THIRDPARTY_DIRECTORIES "$(DXSDK_DIR)/Include")
elseif (APPLE)
	set(TGON_PLATFORM "TGON_PLATFORM_MACOS")
else ()
	message(FATAL_ERROR "Not supported platform!")
endif ()

target_include_directories(TGON ${TGON_THIRDPARTY_DIRECTORIES})
add_subdirectory(${TGON_SOURCE_PATH})

target_compile_definitions(TGON PRIVATE
	GLEW_STATIC
	FT_DEBUG_LEVEL_ERROR
	FT_DEBUG_LEVEL_TRACE
	FT2_BUILD_LIBRARY
	U_STATIC_IMPLEMENTATION
	U_COMMON_IMPLEMENTATION
	U_I18N_IMPLEMENTATION
	AL_BUILD_LIBRARY
	AL_ALEXT_PROTOTYPES
	OpenAL_EXPORTS
	${TGON_PLATFORM}=1
)

message(STATUS "ENV $ENV{FOO}")
message(STATUS "TGON_THIRDPARTY_DIRECTORIES ${TGON_THIRDPARTY_DIRECTORIES}")
message(STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
message(STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
message(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
